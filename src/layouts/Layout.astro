---
interface Props {
  title: string;
}

const { title } = Astro.props;

import { getImage } from "astro:assets";
import Logo from "../images/lugano-conecta--logo.webp";

const logoURL = await getImage({ src: Logo, format: "webp" });
---

<!doctype html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta
      name="description"
      content="Encuentra profesionales de confianza en tu barrio"
    />
    <meta name="viewport" content="width=device-width" />

    <!-- favicon -->
    <link rel="apple-touch-icon" sizes="180x180" href="/apple-touch-icon.png" />
    <link rel="icon" type="image/png" sizes="32x32" href="/favicon-32x32.png" />
    <link rel="icon" type="image/png" sizes="16x16" href="/favicon-16x16.png" />
    <link rel="manifest" href="/site.webmanifest" />

    <meta name="generator" content={Astro.generator} />
    <title>{title}</title>

    <!-- open graph metas -->
    <meta property="og:title" content={title} />
    <meta
      property="og:description"
      content="Encuentra profesionales de confianza en tu barrio"
    />
    <meta property="og:type" content="website" />
    <meta property="og:url" content={Astro.url.href} />
    <meta property="og:image" content={Astro.site?.href + logoURL.src} />

    <script type="text/javascript">
      (function (c, l, a, r, i, t, y) {
        c[a] =
          c[a] ||
          function () {
            (c[a].q = c[a].q || []).push(arguments);
          };
        t = l.createElement(r);
        t.async = 1;
        t.src = "https://www.clarity.ms/tag/" + i;
        y = l.getElementsByTagName(r)[0];
        y.parentNode.insertBefore(t, y);
      })(window, document, "clarity", "script", "nbp728hn9k");
    </script>

    <script>
      // On page load or when changing themes, best to add inline in `head` to avoid FOUC
      if (
        localStorage.getItem("color-theme") === "dark" ||
        (!("color-theme" in localStorage) &&
          window.matchMedia("(prefers-color-scheme: dark)").matches)
      ) {
        document.documentElement.classList.add("dark");
      } else {
        document.documentElement.classList.remove("dark");
      }
    </script>
    <style>
      *,
      *::before,
      *::after {
        @apply transition-colors;
      }
    </style>
  </head>
  <body
    class="min-h-screen p-4 bg-gray-200 dark:bg-gray-800 text-gray-500 dark:text-gray-100"
  >
    <slot />
    <script
      is:inline
      src="https://cdn.jsdelivr.net/npm/flowbite@2.4.1/dist/flowbite.min.js"
    ></script>
  </body>
</html>
